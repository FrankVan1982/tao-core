import com.eXULiS.lib.*;class com.eXULiS.lib.FileSystemView  {			private var folderIco_mc:MovieClip;	private var fileIco_mc:MovieClip;	private var usbKeyIco_mc:MovieClip;	private var driveIco_mc:MovieClip;		private var depth_nbr:Number;		private var xCoord_nbr:Number;	private var startX_nbr:Number;	private var yCoord_nbr:Number;	private var startY_nbr:Number;	//private var gapIcons_nbr:Number;		private var clipRef_mc:MovieClip;		private var container_mc:MovieClip;	private var backGround_mc:MovieClip;		private var xulWindow_mc:MovieClip;		private var yOffset_nbr:Number=0;	private var toolbox:Toolbox;			public function FileSystemView(fileSystView_mc)	{		trace("CONSTRUCTOR [FileSystemView]");		this.xulWindow_mc=fileSystView_mc;		toolbox=new Toolbox();		depth_nbr=2;		init();	}		private function init():Void	{		startX_nbr=5;		startY_nbr=15;		xCoord_nbr=startX_nbr;		yCoord_nbr=0;		yCoord_nbr=startY_nbr;		clipRef_mc=getRef();		trace("[FileSystemView] init: clipRef_mc = " + clipRef_mc);		clipRef_mc.depth_nbr=0;		createViewContainer();		container_mc._y=yOffset_nbr;	}			public function setRef(fileSystView_mc:MovieClip)	{		this.xulWindow_mc=fileSystView_mc;	}		public function getRef():MovieClip	{		return xulWindow_mc;	}		public function getIdPathRef():String	{		return xulWindow_mc.id;	}		// embed current id in window for moving object	public function setIdPathRef(id_str:String):Void	{		xulWindow_mc.id=id_str;	}		public function displayIcon(name_str:String,type_str:String):MovieClip	{		var _ico_mc=container_mc.createEmptyMovieClip("ico"+depth_nbr,depth_nbr);		var _icoPct_mc=_ico_mc.createEmptyMovieClip("pct",1);		var _icoTxt_mc=_ico_mc.createTextField("tField",2,0,0,20,0);				var my_fmt:TextFormat = new TextFormat();		my_fmt.bold = false;		my_fmt.font = "Arial";		my_fmt.size = 12;		my_fmt.color = 0x000000;				_icoTxt_mc.autoSize=true;		_icoTxt_mc.type="input";		_icoTxt_mc.wordWrap=false;		_icoTxt_mc.border=false;		_icoTxt_mc.setNewTextFormat(my_fmt);		_icoTxt_mc.text=toolbox.wrapRun(name_str.substr(0,9));		_icoTxt_mc._y=48;		_icoPct_mc.loadMovie("icons/"+type_str+".png");				if (_icoTxt_mc._width<48)		{			_icoTxt_mc._x=Math.abs((_icoTxt_mc._width-48)/2);		} else			{			_icoPct_mc._x=Math.abs((_icoTxt_mc._width-48)/2);			}		_ico_mc._x=xCoord_nbr;		_ico_mc._y=yCoord_nbr;		xCoord_nbr+=70;		if (xCoord_nbr>=getRef()._width-60)		{			xCoord_nbr=startX_nbr;			yCoord_nbr+=80;		}		depth_nbr++;		return _ico_mc;	}			private function createViewContainer():Void	{		container_mc=clipRef_mc.createEmptyMovieClip("view"+clipRef_mc.depth_nbr,clipRef_mc.depth_nbr);				clipRef_mc.depth_nbr++;		createBackGround();	}		private function createBackGround():Void	{		backGround_mc=container_mc.createEmptyMovieClip("backG",1);		backGround_mc.beginFill(0xff0000,0);		backGround_mc.moveTo(0,0);		backGround_mc.lineTo(50,0);		backGround_mc.lineTo(50,50);		backGround_mc.lineTo(0,50);		backGround_mc.lineTo(0,0);		backGround_mc.endFill();				//backGround_mc._width=400;		//backGround_mc._height=150;		updateBackGroundSize();	}		private function updateBackGroundSize():Void	{		backGround_mc._width=getRef()._width;		backGround_mc._height=getRef()._height-yOffset_nbr;		}			public function resetPosition():Void	{		xCoord_nbr=startX_nbr;		yCoord_nbr=startY_nbr;	}		}