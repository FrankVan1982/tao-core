class com.eXULiS.lib.Find {	// all reachable textfields		private var tField_ar:Array;		// infos on each textField include tField Ref and text embed		private var storedInfos_ar:Array;		// string to search		private var wordToSearch_str:String;		// store the results like tfield path > begin index, end index		private var searchResult_str:Array;		// array of results with ref to clip and begin index and end index		private var finalResults_ar:Array;		public function Find(tField_ar:Array, toSearch_str:String)		{			this.tField_ar=tField_ar;			this.wordToSearch_str=toSearch_str;			init();		}		private function init():Void		{			// init arrays				// stored infos			storedInfos_ar=new Array();			finalResults_ar=new Array();			// store textFields and infos about text			storeInfos();			// process search			searchInAllText();		}		private function storeInfos():Void		{						trace("myARRAY tField_ar : "+tField_ar);						for (var a in tField_ar)			{				var _infosDetail:Array=[tField_ar[a],tField_ar[a].text];									trace("myARRAY tField_ar: "+tField_ar[a]._name+" texte > "+tField_ar[a].text);								storedInfos_ar.push(_infosDetail);			}		}		private function searchInAllText():Void		{			for (var b in storedInfos_ar)			{				if (storedInfos_ar[b]==undefined) return;								var _idSearch=0;								while (storedInfos_ar[b][1].indexOf(wordToSearch_str,_idSearch)!=-1)				{				var _idBegin=storedInfos_ar[b][1].indexOf(wordToSearch_str,_idSearch);				var _idEnd=(storedInfos_ar[b][1].indexOf(wordToSearch_str,_idSearch)+wordToSearch_str.length);				var _finalResults_ar:Array=[storedInfos_ar[b][0],_idBegin,_idEnd];				finalResults_ar.push(_finalResults_ar);							_idSearch+=(_idEnd+1);				}			}		}		public function getResults():Array		{			return finalResults_ar;		}	}