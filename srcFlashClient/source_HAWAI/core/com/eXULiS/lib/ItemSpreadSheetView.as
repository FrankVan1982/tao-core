import mx.controls.DataGrid;import mx.controls.gridclasses.DataGridColumn;import com.xfactorstudio.xml.xpath.*;import com.eXULiS.lib.*;class com.eXULiS.lib.ItemSpreadSheetView{			private var myModel;	private var myController;		private var depth_nbr:Number;			private var clipRef_mc:MovieClip;		private var container_mc:MovieClip;	private var backGround_mc:MovieClip;		public var xulWindow_mc:MovieClip;		private var infosColumn_str:String;		private var colulmnInfos_ar:Array;		private var maxCount;		private var infosToAdd:Object;		private var infos_xml:XML;		private var answers_ar:Array;		private var current_count_nbr:Number;		private var headerH_nbr:Number;	private var chboxCol_bool:Boolean;	private var numbersCol_bool:Boolean;	private var colorLineByEven_bool:Boolean;	private var toolbox:Toolbox;				public function ItemSpreadSheetView(container_mc)	{		trace("CONSTRUCTOR [ItemSpreadSheetView] --> ");		this.xulWindow_mc=container_mc;				depth_nbr=5;				init();				toolbox=new Toolbox();		_root._ref=toolbox;//		HtmlCellRenderer.CssUrl = "style.css";	}		private function init():Void	{				clipRef_mc=getRef();		clipRef_mc.depth_nbr=1;			createViewContainer();		infosToAdd=new Object();		answers_ar=new Array();		//answers_ar=[1,4,6,8,10,11,20];			}			public function displaySpreadSheet(data_xml:XML,headerH_nbr,chboxCol_bool,numbersCol_bool, colorLineByEven_bool)	{							infos_xml=data_xml;				this.colorLineByEven_bool=colorLineByEven_bool;		this.headerH_nbr=headerH_nbr;		this.chboxCol_bool=chboxCol_bool;		this.numbersCol_bool=numbersCol_bool;						if (!xulWindow_mc.mySpreadSheet)		{			trace("BLACKspreadSheet VIEW"+infos_xml+" xulWindow_mc"+xulWindow_mc);		xulWindow_mc.createClassObject(DataGrid, "mySpreadSheet", clipRef_mc.depth_nbr);				clipRef_mc.depth_nbr++;				xulWindow_mc.mySpreadSheet.move(0,0);		xulWindow_mc.mySpreadSheet.hGridLines=true;				xulWindow_mc.mySpreadSheet.rowHeight = 23;				var _hHeight= (headerH_nbr) ? headerH_nbr : 40; 		xulWindow_mc.mySpreadSheet.headerHeight=_hHeight;				xulWindow_mc.mySpreadSheet.selectable=true;		//xulWindow_mc.mySpreadSheet.multipleSelection=true;				//xulWindow_mc.mySpreadSheet.editable=true;		xulWindow_mc.mySpreadSheet.sortableColumns=false;		}				populate();				updateBackGroundSize();						//refreshTree(xml_str);		return xulWindow_mc.myGrid;			}			public function populate()	{				//Columns		var columns_ar=XPath.selectNodes(infos_xml, "//column/");				if (chboxCol_bool)		{		// Add column for chbox		var _mySelecCol:DataGridColumn = new DataGridColumn("rowSelect");				_mySelecCol.headerText = "";		_mySelecCol.cellRenderer = "CheckCellRenderer";		_mySelecCol.resizable=false;				_mySelecCol.headerRenderer="HeaderSSRenderer";		_mySelecCol.width=40;				xulWindow_mc.mySpreadSheet.addColumn(_mySelecCol);		}						// Add Number Column by Default		var _myFirstCol:DataGridColumn = new DataGridColumn("id");		// No Header Title (to be defined)		_myFirstCol.headerText = "";		_myFirstCol.headerRenderer="HeaderSSRenderer";		_myFirstCol.width=30;		_myFirstCol.resizable=false;				if (numbersCol_bool)		{		xulWindow_mc.mySpreadSheet.addColumn(_myFirstCol);			var myColNumb=xulWindow_mc.mySpreadSheet.getColumnIndex("id");		xulWindow_mc.mySpreadSheet.getColumnAt(myColNumb).setStyle("backgroundColor",0xfbedde);		}						for (var j=0;j<columns_ar.length;j++)		{			// create column based on xml id			var _myCol:DataGridColumn = new DataGridColumn(columns_ar[j].attributes.id);			_myCol.headerText = toolbox.wrapRun(columns_ar[j].firstChild.firstChild.nodeValue);			_myCol.cellRenderer = "HtmlCellRenderer";			_myCol.headerRenderer="HeaderSSRenderer";						_myCol["htmlFunction"] = amazonHtmlFunction;			_myCol.width=xulWindow_mc._exulis.width/columns_ar.length;			xulWindow_mc.mySpreadSheet.addColumn(_myCol);		}				// datas		var _myInfos_ar:Array=XPath.selectNodes(infos_xml, "//row/");								maxCount=_myInfos_ar.length;						for (var j=0;j<maxCount;j++)		{			var colCount_nbr:Number=_myInfos_ar[j].childNodes.length;			var myInfos_obj=new Object();			myInfos_obj["id"]=null;						for (var z=0;z<colCount_nbr;z++)			{								var _myValue=toolbox.wrapRun(_myInfos_ar[j].childNodes[z].firstChild.nodeValue);								//trace("myVALUE > "+myInfos_obj[_myInfos_ar[j].childNodes[z].attributes.columnlink]);												if (!isNaN(Number(_myValue)))				{				myInfos_obj[_myInfos_ar[j].childNodes[z].attributes.columnlink] = Number(_myValue);																} else					{						myInfos_obj[_myInfos_ar[j].childNodes[z].attributes.columnlink] = _myValue;												// separator unit 22						if (_myInfos_ar[j].childNodes[z].attributes.id == "u22_spreadsheet_ColaBtoD_row2")						{							var  _testedSize = myInfos_obj[_myInfos_ar[j].childNodes[z].attributes.columnlink];							var _separator = _testedSize.substr(1, 1);														xulWindow_mc._exulis._targetExecutionLayer.separator = _separator;														trace("MYDATAS "+xulWindow_mc._exulis._targetExecutionLayer.separator);													}					}								var _id =_myInfos_ar[j].childNodes[z].attributes.id;						}												// Shadow column for feedTrace, add new column for id.			myInfos_obj["feedId"]=_id;						xulWindow_mc.mySpreadSheet.addItem(myInfos_obj);								}				if (numbersCol_bool)		{		renum();		}				if (colorLineByEven_bool)		{			colorLineByEven(infos_xml);		}			}		private function colorLineByEven(myXml)	{		for (var f=0;f<maxCount;f++)		{			if (String(f/2).indexOf(".")>-1)			xulWindow_mc.mySpreadSheet.setPropertiesAt(f, {backgroundColor:0xFF0000});		}	}		// multi Sorting with 3 level of sorting	// column is column name	// methode is String sorting ASCENDING, DESCENDING, NUMERIC ....	// column args nu	public function sortSsheet(column0,methode0,column1,methode1,column2,methode2)	{		trace("mySORT in");				//trace("VINCE //////"+column0+"/"+methode0+" - "+column1+"/"+methode1+" - "+column2+"/"+methode2);				var _colTab=new Array();		var _methodeTab=new Array();				if (column0.length>0 & column0!="")		{			_colTab.push(column0);			_methodeTab.push(Array[methode0] | Array.NUMERIC);		} 		if (column1.length>0 & column1!="")		{			_colTab.push(column1);			_methodeTab.push(Array[methode1] | Array.NUMERIC);		}		if (column2.length>0 & column2!="")		{			_colTab.push(column2);			_methodeTab.push(Array[methode2] | Array.NUMERIC);		}												xulWindow_mc.mySpreadSheet.sortItemsBy(_colTab, _methodeTab);				renum();			}					// first column is always numbered from 1 to max Count although DG is sorted	private function renum()	{				if (maxCount!=undefined)		{			for (var a=0;a<=maxCount;a++)			{				var _ref=xulWindow_mc.mySpreadSheet.getItemAt(a);				_ref["id"]=a+1;				xulWindow_mc.mySpreadSheet.replaceItemAt(a,_ref);			}		}			}					private function createArrayOfNumber(from:Number,to:Number):Array	{		var _nb_ar:Array=new Array();		for (var g=from;g<=to;g++)		{			_nb_ar.push(g);		}		return _nb_ar;	}		public function displayNextFounded()	{		emptyLineColor(answers_ar);		current_count_nbr++;				if (current_count_nbr>=answers_ar.length)		{			current_count_nbr=0;		}				var _scroll;		var _count=answers_ar[current_count_nbr];				if (_count>14)		{			_scroll=(_count-14);		} else			{				_scroll=0;			}					  		xulWindow_mc.mySpreadSheet.vPosition =_scroll;				xulWindow_mc.mySpreadSheet.setPropertiesAt(_count, {backgroundColor:0x00CC66} );			}		public function displayPreviousFounded()	{		emptyLineColor(answers_ar);		current_count_nbr--;				if (current_count_nbr<0)		{			current_count_nbr=answers_ar.length-1;		}				var _scroll;		var _count = answers_ar[current_count_nbr];				if (_count>14)		{			_scroll=(_count-14);		} else			{				_scroll=0;			}					  		xulWindow_mc.mySpreadSheet.vPosition =_scroll;				xulWindow_mc.mySpreadSheet.setPropertiesAt(_count, {backgroundColor:0x00CC66} );			}		public function searchWord(value_str)	{						var _count=0;		var _lowerSearch=value_str.toLowerCase();		//var _partial_result_ar=new Array();						current_count_nbr=-1;				// empty old search results		emptyLineColor(answers_ar);		emptyArray(answers_ar);				while(_count<=maxCount)		{												var _object=xulWindow_mc.mySpreadSheet.getItemAt(_count);						for (var p in _object) {									 if (p!="id" and p!="rowSelect")					 {					 var _lowerRes= (_object[p].toLowerCase()!=undefined) ? _object[p].toLowerCase() : _object[p];															 						 if (String(_lowerRes).indexOf(String(_lowerSearch))!=-1)						  {								// verify is this is not a doublon							var _doublon_bool:Boolean=false;							for (var a in answers_ar)							{								if (_count==answers_ar[a])								{									_doublon_bool=true;									break;								}															}															if (_doublon_bool==false)								{									answers_ar.push(_count);								}													  }					 }						}																	// empty partail result			_count++;					}						/* if no result do something		if (answers_ar.length == 0) {								}*/						displayNextFounded();			}		private function getSearchAnswerNumber():Number	{		return answers_ar.length;	}		private function emptyArray(tab_ar)	{		if (tab_ar.length<1) return;		if (tab_ar.length==undefined) return;						while(tab_ar.length>0)		{			tab_ar.pop();					}	}		private function emptyLineColor(tab_ar)	{		if (tab_ar.length<1) return;				for (var a=0;a<tab_ar.length;a++)		{		xulWindow_mc.mySpreadSheet.setPropertiesAt(tab_ar[a], {backgroundColor:0xffffff} );		}	}			public function eraseInfos():Void	{		xulWindow_mc.mySpreadSheet.removeAll();	}			public function setRef(fileSystView_mc:MovieClip)	{		this.xulWindow_mc=fileSystView_mc;	}		public function getRef():MovieClip	{				return xulWindow_mc;	}			public function getIdPathRef():String	{		return xulWindow_mc.id;	}		// embed current id in window for moving object	public function setIdPathRef(id_str:String):Void	{		xulWindow_mc.id=id_str;	}			private function createViewContainer():Void	{		container_mc=clipRef_mc.createEmptyMovieClip("view"+clipRef_mc.depth_nbr,clipRef_mc.depth_nbr);				clipRef_mc.depth_nbr++;		createBackGround();	}		private function createBackGround():Void	{		backGround_mc=container_mc.createEmptyMovieClip("backG",1);		backGround_mc.beginFill(0xff0000,0);		backGround_mc.moveTo(0,0);		backGround_mc.lineTo(50,0);		backGround_mc.lineTo(50,50);		backGround_mc.lineTo(0,50);		backGround_mc.lineTo(0,0);		backGround_mc.endFill();		updateBackGroundSize();	}		public function updateBackGroundSize():Void	{				xulWindow_mc.mySpreadSheet.setSize(xulWindow_mc._exulis.width, xulWindow_mc._exulis.height);			}				private function amazonHtmlFunction(itemObj:Object, columnName:String) {					if (itemObj == undefined || columnName == undefined) {		// trace(" Philippe , a bug !!!");		return;	}			switch (columnName) {	case "id" :				var html;		html = "<p class='colNums' align='right'>"+_root._ref.wrapRun(itemObj.id)+"</p>";		return html;		break;		case columnName :				var html;				trace("toto1 : "+toolbox.wrapRun(itemObj[columnName]));		trace("toto2 : *"+itemObj[columnName]+"*");				html = "<p class='colDatas' align='left'>"+_root._ref.wrapRun(itemObj[columnName])+"</p>";		return html;		break;					default:		var html;		html = "<p class='colNum' align='right'>"+_root._ref.wrapRun(itemObj)+"</p>";		return html;	break;	}};				}