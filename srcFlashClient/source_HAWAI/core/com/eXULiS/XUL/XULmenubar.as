import com.eXULiS.XUL.XULelement;import mx.utils.Delegate;class com.eXULiS.XUL.XULmenubar extends XULelement {	var myMenuBar_mc:MovieClip;	var _obj:MovieClip;	var childs_ar:Array;		var navigationState_bool:Boolean;		var navigationUnderMouse_bool:Boolean;	function XULmenubar(xulParent,xulDef:XMLNode) {		super(xulParent,xulDef);		_defaultWidth = 100;		_defaultHeight = 100;	}		function create(){		trace("XULmenubar: create menu bar (" + _objDef.attributes["id"] + ") on " + _objParent + " on depth: " + _objParent._childNextDepth);	        myMenuBar_mc=_objParent.createEmptyMovieClip(_objDef.attributes["id"],_objParent._childNextDepth+9999999);		_obj = super.create(_obj,this,1);		trace("XULmenubar: special properties setting");			_obj = super.applyStyle(_obj);				myMenuBar_mc._parent.swapDepths(9999999);				// register childs		childs_ar=new Array();		mouseDownHandler();		setLayout();				return _obj;	}		private function mouseDownHandler()	{		var oMouseEvent=new Object();		oMouseEvent.onMouseDown=Delegate.create(this, onMenuClik);		Mouse.addListener(oMouseEvent);	}		private function onMenuClik()	{		trace("myCLICK ok >> "+navigationUnderMouse_bool);		if (navigationUnderMouse_bool == undefined) return ;		if (navigationUnderMouse_bool == true)		{			// disabled, less interesting than MENU event			//trace("feedTrace for MENUBAR, Stimulus: " + "id" + _root.FEEDTRACE_PAYLOAD_ATTRIBUTE_NAME_VALUE_SEPARATOR + _objDef.attributes["id"]);			//_level0.currentItemRootLevel.feedTrace("MENUBAR","id" + _root.FEEDTRACE_PAYLOAD_ATTRIBUTE_NAME_VALUE_SEPARATOR + _objDef.attributes["id"],"stimulus");		}		else {			manageMenuDisplay("all");			navigationState_bool=false;		}			}		public function manageMenuDisplay(menuRef):String	{		for (var h in childs_ar)		{		 				if (childs_ar[h]!=menuRef)			{ 				trace("myBOOL dans la boucle");			childs_ar[h].displayMenuState(false);			} 		}						return "ok";	}		function setLayout(){		trace("XULmenubar: (setLayout) for " + id + ": special properties setting, top:" + this.top + " left:" + this.left + " width:" + this.width + " height:" + this.height);			_obj._y = this.top;		_obj._x = this.left;		createBackground();	}		private function createBackground():Void	{		_obj.clear();		if((this["background"]!=undefined) && (this["background"]!="none")){			_obj.beginFill(Number(this["background"]),100);		} 				if(this["background"]==undefined)		{				_obj.beginFill(0xB3B3B3,100);		}							if((this["border-style"]=="solid") && (Number(this["border-width"])>0)){							var _lineWidth_nb:Number=Number(this["border-width"]);						var _lineColor_nb:Number=Number(this["border-color"]);			_obj.lineStyle(_lineWidth_nb, _lineColor_nb, 100);		}				var _myWidth_nb=this.width-1;		var _myHeight_nb=this.height-1;				_obj.moveTo(0,0);		_obj.lineTo(_myWidth_nb,0);		_obj.lineTo(_myWidth_nb,_myHeight_nb);		_obj.lineTo(0,_myHeight_nb);		_obj.lineTo(0,0);					if(this["background"]!="none"){			_obj.endFill();		}			}		public function addEntry(myChild):Void	{		childs_ar.push(myChild);		dispatchMenuEntry();	}		private function dispatchMenuEntry()	{		var _gap=0;		var _xCoord_nb=_gap;		var _childsLength_nb:Number=childs_ar.length;				for (var a=0;a<_childsLength_nb;a++)		{			var _childObjSize=childs_ar[a].overState_mc._width;						var _childObj=childs_ar[a]._obj;			_childObj._x=_xCoord_nb;			_xCoord_nb+=_childObjSize+_gap;		}	}		function destroy(){		trace("XULmenubar: (destroy) for " + id + ": " + _objDescendants.length + " children to be deleted");		for(var vCpt=0;vCpt < _objDescendants.length;vCpt++){			_objDescendants[vCpt]._exulis.destroy();		}		_obj.destroyObject(id);		this.removeMovieClip();	}}