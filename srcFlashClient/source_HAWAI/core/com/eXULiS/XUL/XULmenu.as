import com.eXULiS.XUL.XULelement;import mx.utils.Delegate;class com.eXULiS.XUL.XULmenu extends XULelement {	var _obj:MovieClip;	private var childs_ar:Array;		var hitZone_mc:MovieClip;	var overState_mc:MovieClip;		var myTfield_tf:TextField;	var gap_nb:Number;	var label_str:String;		var refHeight_nbr:Number;		var menubar;	function XULmenu(xulParent,xulDef:XMLNode) {		super(xulParent,xulDef);		trace("XULmenu: relay given to XULelement with xulParent = " + xulParent);	}		function create(){		trace("XULmenu: create menu (" + _objDef.attributes["id"] + ") on " + _objParent + " on depth: " + _objParent._childNextDepth);		_objParent.createEmptyMovieClip(_objDef.attributes["id"],_objParent._childNextDepth);				_obj = super.create(_obj,this,1);				gap_nb=20;		refHeight_nbr=Number(_objParent._exulis._objDef.attributes["height"]);		menubar=_objParent._exulis;				label_str=toolbox.wrapRun(_objDef.attributes["label"], _guiSource,"SingleNode","String");				setTextEntry();		hitZone_mc=createHitState(0xff66ff,20,0);		centerTextField();				// overState		overState_mc=createHitState(0x666666,4,100);		overState_mc._alpha=0;				// interactivity		hitZone_mc.onRollOver=Delegate.create(this, onMenuOver);		hitZone_mc.onRollOut=Delegate.create(this, onMenuOut);		hitZone_mc.onPress=Delegate.create(this, onMenuPress);		hitZone_mc.onReleaseOutside=Delegate.create(this, onMenuReleaseOutside);				hitZone_mc.useHandCursor=false;		// register childs		childs_ar=new Array();		_objParent._exulis.addEntry(this);				return _obj;	}		private function onMenuOver()	{				overState_mc._alpha=100;		myTfield_tf.htmlText="<font face='Arial' size='12' color='#ffffff' >"+label_str+"</font>";				//trace("")				if (childs_ar[0]._obj._visible!=true)		{			if (_objParent._exulis.navigationState_bool==true)			{				displayMenuState(true);						_objParent._exulis.manageMenuDisplay(this);				childs_ar[0].menuAnimation();			}		}				menubar.navigationUnderMouse_bool=true;	}		private function onMenuOut()	{				if (_objParent._exulis.navigationState_bool!=true)		{		overState_mc._alpha=0;		myTfield_tf.htmlText="<font face='Arial' size='12' color='#000000' >"+label_str+"</font>";		}		trace("myCLICK onMenuOut false");		menubar.navigationUnderMouse_bool=false;	}		private function onMenuPress()	{		trace("feedTrace for MENU, Stimulus: " + "id" + _root.FEEDTRACE_PAYLOAD_ATTRIBUTE_NAME_VALUE_SEPARATOR + _objDef.attributes["id"]);		_level0.currentItemRootLevel.feedTrace("MENU","id" + _root.FEEDTRACE_PAYLOAD_ATTRIBUTE_NAME_VALUE_SEPARATOR + _objDef.attributes["id"],"stimulus");				_objParent._exulis.navigationState_bool=true;		displayMenuState(true);		_objParent._exulis.manageMenuDisplay(this);				menubar.navigationUnderMouse_bool=true;	}		private function onMenuReleaseOutside()	{		// Menu Release Outside		menubar.navigationUnderMouse_bool=true;	}			private function setTextEntry():Void	{		myTfield_tf=_obj.createTextField("myText",10,0,0,10,10);		myTfield_tf.autoSize=true;		myTfield_tf.selectable=false;		myTfield_tf.html=true;		myTfield_tf.htmlText="<font face='Arial' size='12' color='#000000'>"+label_str+"</font>"	}				private function centerTextField()	{		myTfield_tf._x=((myTfield_tf._width+gap_nb)-myTfield_tf._width)/2;		myTfield_tf._y=(refHeight_nbr-myTfield_tf._height)/2;	}			private function createHitState(color_nb,depth_nb,alpha_nb):MovieClip	{		var _myWidth_nb=myTfield_tf._width+gap_nb;		var myState_mc=_obj.createEmptyMovieClip("myState"+depth_nb,depth_nb);		myState_mc.beginFill(color_nb,alpha_nb);		myState_mc.moveTo(0,0);		myState_mc.lineTo(_myWidth_nb,0);		myState_mc.lineTo(_myWidth_nb,refHeight_nbr);		myState_mc.lineTo(0,refHeight_nbr);		myState_mc.lineTo(0,0);		myState_mc.endFill();		return myState_mc;	}		public function displayMenuState(state_bool)	{		childs_ar[0]._obj._visible=state_bool;		if (state_bool==false)		{				overState_mc._alpha=0;				myTfield_tf.htmlText="<font face='Arial' size='12' color='#000000' >"+label_str+"</font>";		}	}	public function addEntry(myChild):Void	{		childs_ar.push(myChild);	}		function setLayout(){		trace("XULmenu: (setLayout) for " + id + ": special properties setting, top:" + this.top + " left:" + this.left + " width:" + this.width + " height:" + this.height);		_obj._y = this.top;		_obj._x = this.left;	}		function destroy(){		trace("XULmenu: (destroy) for " + id + ": " + _objDescendants.length + " children to be deleted");		for(var vCpt=0;vCpt < _objDescendants.length;vCpt++){			_objDescendants[vCpt]._exulis.destroy();		}		this.removeMovieClip();	}}