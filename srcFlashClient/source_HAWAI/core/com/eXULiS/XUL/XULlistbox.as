import com.eXULiS.XUL.XULelement;//import mx.controls.ComboBox;//import mx.controls.List;import mx.utils.Delegate;class com.eXULiS.XUL.XULlistbox extends XULelement {	var _obj:mx.controls.List;//	var _dataProvider:XML;		public var _dataprovider;	private var zeDatas_array:Array;			var _dataProvider:Array;	function XULlistbox(xulParent,xulDef:XMLNode) {		super(xulParent,xulDef);		trace("XULlistbox: relay given to XULelement with xulParent = " + xulParent);	}	function create(){		trace("XULlistbox: create List (" + _objDef.attributes["id"] + ") on " + _objParent + " on depth: " + _objParent._childNextDepth);		_objParent.createClassObject(mx.controls.List,_objDef.attributes["id"],_objParent._childNextDepth);				_obj = super.create(_obj,this,1);		trace("XULlistbox: special properties setting for " + id + ": top:" + top + " left:" + left + " width:" + width + " height:" + height);		_dataProvider = new Array();		_obj = super.applyStyle(_obj);		setLayout();		onLoad();		var tListEvent_listener = new Object();		tListEvent_listener.change = Delegate.create(this, onChangeEvent);		_obj.addEventListener("change", tListEvent_listener);				/*		var tMenuEvent_listener = new Object();        tMenuEvent_listener.change = function (eventObj){            trace("XULmenulist: Menu item chosen: " + eventObj.menuItem.attributes["label"]);		}		_obj.addEventListener("change", tMenuEvent_listener);*/		return _obj;		}/*	function attachDataProvider(vDP_obj){		trace("XULmenulist: (attachDataProvider) for " + id + ": " + vDP_obj);		_dataProvider_xml = vDP_obj;	}*/    		public function populateList(_dp)	{				_dataprovider=_dp;				trace("myList ListChooser "+_dataprovider);				zeDatas_array=new Array();		_obj.dataProvider = zeDatas_array;				for (var a=0;a<_dataprovider.childNodes.length;a++)				{															zeDatas_array.addItem({label:_dataprovider.childNodes[a].attributes.label,data:_dataprovider.childNodes[a].attributes.data});														}	}			function onLoad()	{								for(var vCpt_num:Number = 0;vCpt_num < _actions.length;vCpt_num++){			var vAction_obj:Object = _actions[vCpt_num];			if(vAction_obj.type == "load"){				trace("XUL2SWF: fullpath onload");				toolbox.wrapRun(vAction_obj.action,this);			}		}			}	function onChangeEvent(eventObj){		trace("XUL2SWF: fullpath: " + eventObj.target);						var event_str:String = "LISTBOX";		var payload_str:String = "id"+_root.FEEDTRACE_PAYLOAD_ATTRIBUTE_NAME_VALUE_SEPARATOR+_objDef.attributes["id"]+ 		_root.FEEDTRACE_PAYLOAD_ATTRIBUTES_SEPARATOR + "index"+_root.FEEDTRACE_PAYLOAD_ATTRIBUTE_NAME_VALUE_SEPARATOR+eventObj.target.selectedIndex;		trace("feedTrace for " + event_str + ", Stimulus " + payload_str);		_level0.currentItemRootLevel.feedTrace(event_str,payload_str,"stimulus"); // LISTBOX				event_str = "DOACTION";				for(var vCpt_num:Number = 0;vCpt_num < _actions.length;vCpt_num++){			var vAction_obj:Object = _actions[vCpt_num];			if(vAction_obj.type == "change"){				toolbox.wrapRun(vAction_obj.action,this);								payload_str = "action"+_root.FEEDTRACE_PAYLOAD_ATTRIBUTE_NAME_VALUE_SEPARATOR+vAction_obj.action;								trace("feedTrace for " + event_str + ", Stimulus " + payload_str);				_level0.currentItemRootLevel.feedTrace(event_str,payload_str,"stimulus");	// DOACTION			}		}	}				function addMenuItem(menulistInitObj_obj:Object){		trace("XULlistbox: add a menu item (" + menulistInitObj_obj["label"] +","+menulistInitObj_obj["data"]+ ") on " + _obj);						this._dataProvider.addItem({label:menulistInitObj_obj["label"],data:menulistInitObj_obj["data"]});	}	function setLayout(){		trace("XULlistbox: (setLayout) for " + id + ": special properties setting, top:" + this.top + " left:" + this.left + " width:" + this.width + " height:" + this.height);        _obj.move(this.left,this.top);        _obj.setSize(this.width,this.height);	}	function destroy(){		trace("XULlistbox: (destroy) for " + id + ": " + _objDescendants.length + " children to be deleted");		for(var vCpt=0;vCpt < _objDescendants.length;vCpt++){			_objDescendants[vCpt]._exulis.destroy();		}		this.removeMovieClip();	}}