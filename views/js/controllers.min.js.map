{"version":3,"sources":["routes.js","app.js","entry.js","Lock/locked.js","main.js","passwordRecovery.js","settings/extensionManager.js","users/add.js","users/disable-edit.js","users/index.js"],"names":["define","Main","actions","index","entry","getSectionActions","getSectionTrees","login","PasswordRecovery","Lock","locked","ExtensionsManager","Users","deps","add","_","$","historyRouterFactory","loggerFactory","eventifier","statifier","urlUtil","feedback","logoutEvent","historyRouter","redirectUrl","appLogger","appController","start","options","currentRoute","apply","forwardTo","window","location","forward","selector","target","document","off","on","e","$elt","href","preventDefault","this","attr","redirect","getRouter","getLogger","onError","err","message","error","code","defaults","url","setState","trigger","__","$container","errorMessage","data","helpers","sectionApi","click","ajax","_url","type","uri","dataType","success","response","module","context","router","uiForm","generisRouter","sections","actionManager","versionWarning","loadingBar","nav","search","treeLoader","sectionHeight","logger","sectionTree","section","treeProvider","treeActions","reduce","acc","id","key","action","getBy","treeUrl","build","root_url","treeType","name","init","rootClassUri","icon","sectionId","loadNode","defaultUri","config","$doc","ajaxSend","ajaxComplete","stop","scrollTo","panel","addClass","each","$treeElt","$actionBar","then","setHeights","catch","show","loadContentBlock","isArray","extraRoutes","forEach","route","dispatch","feedbackType","conf","getDependencies","extension","dependencies","ext","push","concat","getUnique","orig","a","i","length","inArray","progressConsole","msg","append","prop","scrollTop","installNextExtension","toInstall","indexCurrentToInstall","text","replace","loaded","slideUp","$tr","appendTo","hide","$orig","slideDown","remove","styleTables","noAvailableExtensions","animate","width","percentByExt","hasNextExtensionToInstall","installError","info","postInstall","backgroundColor","done","setTimeout","reload","removeClass","$noAvailableExtElement","empty","ext_installed","event","stopPropagation","$installButton","parent","find","split","join","dialog","modal","height","buttons","alert","users","checkLogin","loginId","exit","structure","get","disable","urlHelper","dialogConfirm","runUserAction","confirmMessage","tokenName","xsrfTokenName","cookie","datatable","editUser","enable","removeUser","row","lockUser","unlockUser","$userList","edit","lock","unlock","dataset","lockBtn","unlockBtn","lockable","btn","paginationStrategyBottom","filter","model","label","sortable","visible","transform","value"],"mappings":"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","file":"routes.js","sourcesContent":["/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n * \r\n * \r\n */\r\n\r\n//@see http://forge.taotesting.com/projects/tao/wiki/Front_js\r\ndefine('controller/routes',[],function(){\r\n    'use strict';\r\n\r\n    return {\r\n        'Main': {\r\n            'actions' : {\r\n                'index' : 'controller/main',\r\n                'entry' : 'controller/entry',\r\n                'getSectionActions' : 'controller/main/actions',\r\n                'getSectionTrees' : 'controller/main/trees',\r\n                'login' : 'controller/login'\r\n            }\r\n        },\r\n        'PasswordRecovery': {\r\n            'actions' : {\r\n                'index' : 'controller/passwordRecovery'\r\n            },\r\n        },\r\n        'Lock': {\r\n            'actions' : {\r\n                'locked' : 'controller/Lock/locked'\r\n            }\r\n        },\r\n        'ExtensionsManager' : {\r\n            'actions' : {\r\n                'index' : 'controller/settings/extensionManager'\r\n            }\r\n        },\r\n        'Users' : {\r\n            'deps' : 'controller/users/disable-edit',\r\n            'actions' : {\r\n                'index' : 'controller/users/index',\r\n                'add'   : 'controller/users/add'\r\n            }\r\n        }\r\n    };\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\r\n */\r\ndefine('controller/app',[\r\n    'lodash',\r\n    'jquery',\r\n    'core/historyRouter',\r\n    'core/logger',\r\n    'core/eventifier',\r\n    'core/statifier',\r\n    'util/url',\r\n    'ui/feedback',\r\n    'layout/logout-event'\r\n], function (_, $, historyRouterFactory, loggerFactory, eventifier, statifier, urlUtil, feedback, logoutEvent) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Shared router that will manage the page for each controller\r\n     * @type {historyRouter}\r\n     */\r\n    var historyRouter;\r\n\r\n    /**\r\n     *\r\n     */\r\n    var redirectUrl;\r\n\r\n    /**\r\n     * Creates a logger for the app\r\n     * @type {logger}\r\n     */\r\n    var appLogger = loggerFactory('controller/app');\r\n\r\n    /**\r\n     * Defines an application controller that will manage the routes through the history.\r\n     * It will start by dispatching the current location, in order to keep history consistency.\r\n     * To properly use this application controller you need to take care of it in each controller\r\n     * that is intended to be routed through the history. See samples below.\r\n     *\r\n     * @example\r\n     *  // Defines a controller that is routable through the history\r\n     *  return {\r\n     *      // Will be called each time the history routes the action to this controller\r\n     *      start: function start() {\r\n     *          // Take care of the application controller by applying a hook on each routable links\r\n     *          return appController.apply('.link');\r\n     *\r\n     *          // You can also be notified of a change in the route,\r\n     *          // and release some resources as this controller will be destroyed.\r\n     *          // Pay attention to the event namespace, it must be unique.\r\n     *          appController.on('change.myController', function() {\r\n     *              // Release the event, as this controller will be destroyed\r\n     *              appController.off('change.myController');\r\n     *\r\n     *              // Release resources\r\n     *              ...\r\n     *          });\r\n     *\r\n     *          // Do the stuff of the controller\r\n     *          ...\r\n     *\r\n     *          // If you need to change the current route you can rely on the router brought by the appController\r\n     *          appController.getRouter().redirect(url);\r\n     *  };\r\n     *\r\n     * @typedef {appController}\r\n     */\r\n    var appController = eventifier(statifier({\r\n        /**\r\n         * App controller entry point: set up the router.\r\n         * @param {Object} options\r\n         * @param {String} [options.forwardTo] - an optional route of a client controller to forward\r\n         * @param {String} [options.redirectUrl] - an optional url to redirect client on authorisation errors\r\n         */\r\n        start: function start(options){\r\n            var currentRoute;\r\n\r\n            // all links that are tagged with the \"router\" class are dispatched using the history router\r\n            appController.apply();\r\n\r\n            // dispatch the current route\r\n            if (options && options.forwardTo) {\r\n                currentRoute = options.forwardTo;\r\n            } else {\r\n                currentRoute = window.location + '';\r\n            }\r\n\r\n            if (options && options.redirectUrl) {\r\n                redirectUrl = options.redirectUrl || {};\r\n            }\r\n            historyRouter.forward(currentRoute);\r\n        },\r\n\r\n        /**\r\n         * Catch all links below the target, when they have the provided selector,\r\n         * then dispatch them using the history router.\r\n         * @param {String} [selector] - The CSS signature of links to catch (default: \".router\")\r\n         * @param {String|HTMLElement|jQuery} [target] - The container from which catch links (default: document)\r\n         * @returns {appController}\r\n         */\r\n        apply: function apply(selector, target) {\r\n            selector = selector || '.router';\r\n            target = target || document;\r\n\r\n            $(target).off('click.appController').on('click.appController', selector, function (e) {\r\n                var $elt, href;\r\n\r\n                // prevent the browser to actually change the page from this link\r\n                e.preventDefault();\r\n\r\n                // try to get the target of the link\r\n                $elt = $(this);\r\n                href = $elt.attr('href');\r\n                if (!href) {\r\n                    href = $('[href]:first-child', $elt).attr('href');\r\n                }\r\n\r\n                // use the history router to change the current view\r\n                // the called controller will have in charge to get the data and update the view accordingly\r\n                if (href) {\r\n                    historyRouter.redirect(href);\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Exposes the router so other controllers can dispatch a route\r\n         *\r\n         * @returns {router} the router\r\n         */\r\n        getRouter: function getRouter() {\r\n            return historyRouter;\r\n        },\r\n\r\n        /**\r\n         * Exposes the logger so other controllers can log application level events\r\n         *\r\n         * @returns {logger} the router\r\n         */\r\n        getLogger: function getLogger() {\r\n            return appLogger;\r\n        },\r\n\r\n        /**\r\n         * Catches errors\r\n         * @param {Object} err\r\n         * @returns {appController}\r\n         */\r\n        onError: function onError(err) {\r\n            var message = err && err.message || err;\r\n            var options = {message: message};\r\n\r\n            appLogger.error(err);\r\n            if (err.code === 403){\r\n                options = _.defaults(options, redirectUrl ||  {});\r\n                logoutEvent(options);\r\n            }else{\r\n                feedback().error(message);\r\n            }\r\n            return this;\r\n        }\r\n    }));\r\n\r\n    // setup the history router\r\n    historyRouter = historyRouterFactory()\r\n        .on('dispatching', function (url) {\r\n            appController.setState('dispatching');\r\n            appController.trigger('change', url);\r\n        })\r\n        .on('dispatched', function (url) {\r\n            appController.setState('dispatching', false);\r\n            appController.trigger('started', url);\r\n        });\r\n\r\n    return appController;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n */\r\n\r\ndefine('controller/entry',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'ui/feedback'\r\n], function ($, _, __, feedback) {\r\n    'use strict';\r\n\r\n    /**\r\n     * The login controller\r\n     */\r\n    return {\r\n\r\n        /**\r\n         * Controller entry point\r\n         */\r\n        start: function start() {\r\n            var $container = $('#entry-point-box');\r\n            var errorMessage = $container.data('errormessage');\r\n            if (errorMessage) {\r\n                feedback().error(errorMessage);\r\n            }\r\n        }\r\n    };\r\n});\n","define('controller/Lock/locked',['jquery', 'i18n', 'helpers', 'lock', 'layout/section', 'ui/feedback'], \r\nfunction($, __, helpers, Lock, sectionApi, feedback){\r\n    'use strict';\r\n\t\r\n    return {\r\n        start : function(){\r\n\r\n\t\t    $(\".forcerelease\").click(function(e) {\r\n\t\t    \t\r\n\t\t        e.preventDefault();\r\n\t\t        \r\n\t\t        $.ajax({\r\n                    url: helpers._url('forceRelease', 'Lock', 'tao'),\r\n                    type: \"POST\",\r\n                    data : {uri : $(this).data('id')},\r\n                    dataType: 'json',\r\n                    success : function(response){\r\n                        if(response.success){\r\n        \t\t            feedback().success(__('The lock has been released'));\r\n                            $('.tree').trigger('refresh.taotree'); \r\n                        }\r\n                        else{\r\n        \t\t            feedback().error(__('Unable to release the lock'));\r\n                        }\r\n                    },\r\n                    error : function(){\r\n    \t\t            feedback().error(__('Unable to release the lock'));\r\n                    }\r\n                });\r\n\t\t        \r\n\t\t    });\r\n        }\r\n    }\r\n});\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014-2017 Open Assessment Technologies SA;\r\n */\r\n\r\n/**\r\n * Main controller for the backend\r\n *\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('controller/main',[\r\n    'module',\r\n    'jquery',\r\n    'lodash',\r\n    'context',\r\n    'router',\r\n    'helpers',\r\n    'uiForm',\r\n    'util/url',\r\n    'core/logger',\r\n    'ui/feedback',\r\n    'layout/generisRouter',\r\n    'layout/section',\r\n    'layout/actions',\r\n    'layout/version-warning',\r\n    'layout/loading-bar',\r\n    'layout/nav',\r\n    'layout/search',\r\n    'layout/tree/loader',\r\n    'layout/section-height',\r\n], function(module, $, _, context, router, helpers, uiForm, urlUtil, loggerFactory, feedback, generisRouter, sections, actionManager,versionWarning, loadingBar, nav, search, treeLoader, sectionHeight){\r\n    'use strict';\r\n\r\n    var logger = loggerFactory('controller/main');\r\n\r\n    /**\r\n     * Loads and set up the given tree for a section, based on the tree provider\r\n     * @param {jQueryElement} $container - the tree container with accurate data-attr\r\n     * @param {Object} section - the section the tree belongs to\r\n     * @param {String} section.id - id of the section\r\n     * @param {String} [section.defaultUri] - the URI of the node to select by default\r\n     * @returns {Promise} that resolves once rendered\r\n     */\r\n    var sectionTree = function sectionTree($container, section) {\r\n        var treeProvider;\r\n\r\n        //get the tree actions\r\n        var treeActions  = _.reduce($container.data('actions'), function(acc, id, key){\r\n            var action = actionManager.getBy(id);\r\n            if(action){\r\n                acc[key] = action;\r\n            }\r\n            return acc;\r\n        }, {});\r\n\r\n        var treeUrl = urlUtil.build([context.root_url, $container.data('url')]);\r\n\r\n        var treeType = $container.data('type');\r\n\r\n        //get the current tree based on the type attr, or fallback to jstree\r\n        treeProvider = treeLoader(treeType);\r\n\r\n        if(!treeType){\r\n            //fill with the default value\r\n            $container.data('type', treeProvider.name);\r\n        }\r\n\r\n        return treeProvider.init($container, {\r\n            id           : $container.attr('id'),\r\n            url          : treeUrl,\r\n            rootClassUri : $container.data('rootnode'),\r\n            icon         : $container.data('icon'),\r\n            actions      : treeActions,\r\n            sectionId    : section.id,\r\n            loadNode     : section.defaultUri\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This controller initialize all the layout components used by the backend : sections, actions, tree, loader, etc.\r\n     * @exports tao/controller/main\r\n     */\r\n    return {\r\n        start: function start() {\r\n\r\n            var config = module.config();\r\n            var $doc = $(document);\r\n\r\n            versionWarning.init();\r\n            generisRouter.init();\r\n\r\n            //just before an ajax request\r\n            $doc.ajaxSend(function() {\r\n                loadingBar.start();\r\n            });\r\n\r\n            //when an ajax request complete\r\n            $doc.ajaxComplete(function() {\r\n                loadingBar.stop();\r\n            });\r\n\r\n            //navigation bindings\r\n            nav.init();\r\n\r\n            actionManager.on('error', function(err){\r\n                logger.error(err);\r\n                feedback().error(err);\r\n            });\r\n\r\n            //initialize sections\r\n            sections.on('activate', function(section) {\r\n                window.scrollTo(0, 0);\r\n\r\n                // quick work around issue in IE11\r\n                // IE randomly thinks there is no id and throws an error\r\n                // I know it's not logical but with this 'fix' everything works fine\r\n                if (!section || !section.id) {\r\n                    return;\r\n                }\r\n\r\n                context.section = section.id;\r\n\r\n                //initialize actions\r\n                actionManager.init(section.panel);\r\n\r\n\r\n                //search component\r\n                search.init();\r\n\r\n                switch (section.type) {\r\n                    case 'tree':\r\n                        section.panel.addClass('content-panel');\r\n                        sectionHeight.init(section.panel);\r\n\r\n                        //set up the tree\r\n                        $('.taotree', section.panel).each(function() {\r\n                            var $treeElt = $(this);\r\n                            var $actionBar = $('.tree-action-bar-box', section.panel);\r\n\r\n                            sectionTree($treeElt, section)\r\n                                .then(function(){\r\n                                    $actionBar.addClass('active');\r\n                                    sectionHeight.setHeights(section.panel);\r\n                                })\r\n                                .catch(function(err){\r\n                                    logger.error(err);\r\n                                });\r\n                        });\r\n\r\n                        $('.navi-container', section.panel).show();\r\n                        break;\r\n                    case 'content':\r\n\r\n                        //or load the content block\r\n                        this.loadContentBlock();\r\n                        break;\r\n                }\r\n            })\r\n            .init();\r\n\r\n            //initialize legacy components\r\n            helpers.init();\r\n            uiForm.init();\r\n\r\n            //dispatch also extra registered controllers\r\n            if(config && _.isArray(config.extraRoutes)){\r\n                _.forEach(config.extraRoutes, function(route){\r\n                    router.dispatch(route);\r\n                });\r\n            }\r\n        }\r\n    };\r\n});\r\n\n","/**  \r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n * \r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\r\n *               \r\n */\r\n\r\n/**\r\n * Recovery password page controller\r\n * @author Aleh Hutnikau <hutnikau@1pt.com>\r\n */\r\ndefine('controller/passwordRecovery',[\r\n    'jquery',\r\n    'i18n',\r\n    'module',\r\n    'ui/feedback',\r\n    'layout/version-warning'\r\n], function ($, __, module, feedback,  versionWarning) {\r\n    'use strict';\r\n    var conf = module.config(),\r\n        feedbackType;\r\n\r\n    versionWarning.init();\r\n    if (conf.message) {\r\n        for (feedbackType in conf.message) {\r\n            if (conf.message[feedbackType]) {\r\n                feedback()[feedbackType](conf.message[feedbackType]);\r\n            }\r\n        }\r\n    }\r\n});\r\n\n","define('controller/settings/extensionManager',['jquery', 'i18n', 'context', 'helpers', 'ui/feedback'], function($, __, context, helpers, feedback){\r\n\r\n    var ext_installed = [];\r\n    var toInstall = [];\r\n    var indexCurrentToInstall = -1;\r\n    var percentByExt = 0;\r\n    var installError = 0;\r\n\r\n    function getDependencies(extension) {\r\n            var dependencies = [];\r\n            $('#' + extension + ' .dependencies li:not(.installed)').each(function() {\r\n                    var ext = $(this).attr('rel');\r\n                    var deps = getDependencies(ext);\r\n                    deps.push(ext);\r\n                    dependencies = dependencies.concat(deps);\r\n            });\r\n            return dependencies;\r\n    }\r\n\r\n    //Give an array with unique values\r\n    function getUnique(orig){\r\n            var a = [];\r\n            for (var i = 0; i < orig.length; i++) {\r\n                    if ($.inArray(orig[i], a) < 0) a.push(orig[i]);\r\n            }\r\n            return a;\r\n    }\r\n\r\n    function progressConsole(msg) {\r\n            $('#installProgress .console').append('<p>' + msg + '</p>');\r\n            $('#installProgress .console').prop({scrollTop: $('#installProgress .console').prop(\"scrollHeight\")});\r\n    }\r\n\r\n    function installNextExtension() {\r\n            var ext = toInstall[indexCurrentToInstall];\r\n            $('#installProgress p.status').text(__('Installing extension %s...').replace('%s', ext));\r\n            progressConsole(__('Installing extension %s...').replace('%s', ext));\r\n            $.ajax({\r\n                    type: \"POST\",\r\n                    url: helpers._url('install', 'ExtensionsManager', 'tao'),\r\n                    data: 'id='+ext,\r\n                    dataType: 'json',\r\n                    success: function(data) {\r\n                            helpers.loaded();\r\n                            if (data.success) {\r\n                                    progressConsole(__('> Extension %s succesfully installed.').replace('%s', ext));\r\n\r\n                                    // state that the extension is install in remaining dependencies.\r\n                                    $('li.ext-id.ext-' + ext).addClass('installed');\r\n\r\n                                    $('tr#'+ext).slideUp('normal', function() {\r\n                                            var $tr = $('<tr></tr>').appendTo($('#extensions-manager-container tbody')).hide();\r\n                                            var $orig = $('tr#' + ext + ' td');\r\n                                            $tr.append('<td class=\"ext-id bordered\">' + $($orig[0]).text() + '</td>');\r\n                                            $tr.append('<td class=\"author\">' + $($orig[1]).text() + '</td>');\r\n                                            $tr.append('<td class=\"version\">' + $($orig[2]).text() + '</td>');\r\n                                            $tr.slideDown('normal', function() {\r\n                                                    $('tr#' + ext).remove();\r\n\r\n                                                    // table changed, restyle.\r\n                                                    styleTables();\r\n\r\n                                                    // If the available extensions table is empty,\r\n                                                    // just inform the user.\r\n                                                    if ($('#available-extensions-container table tbody tr').length == 0){\r\n                                                            noAvailableExtensions();\r\n                                                    }\r\n\r\n                                                    $('#installProgress .bar').animate({width:'+=' + percentByExt + '%'}, 1000, function() {\r\n                                                            //Next\r\n                                                            indexCurrentToInstall++;\r\n                                                            hasNextExtensionToInstall();\r\n                                                    });\r\n                                            });\r\n                                    });\r\n                            } else {\r\n                                    installError = 1;\r\n                                    progressConsole('Installation of ' + ext + ' failed');\r\n                            }\r\n                            feedback().info(data.message);\r\n                    }\r\n            });\r\n\r\n            if (installError) {\r\n                    progressConsole(__('A fatal error occured during the installation process.'));\r\n            }\r\n    }\r\n\r\n    function postInstall(){\r\n        progressConsole(__('Post install processing'));\r\n        return $.ajax({\r\n            type: \"GET\",\r\n            url: helpers._url('postInstall', 'ExtensionsManager', 'tao')\r\n        });\r\n    }\r\n\r\n    function hasNextExtensionToInstall() {\r\n            if (indexCurrentToInstall >= toInstall.length) {\r\n                toInstall = [];\r\n                $('#installProgress .bar').animate({backgroundColor:'#bb6',width:'100%'}, 1000);\r\n\r\n                postInstall().done(function(data) {\r\n                    helpers.loaded();\r\n                    $('#installProgress .bar').animate({backgroundColor:'#6b6'}, 1000);\r\n                    $('#installProgress p.status').text(__('Installation done.'));\r\n                    progressConsole(__('> Installation done.'));\r\n                    progressConsole(__('... reloading page.'));\r\n\r\n                    setTimeout(function(){\r\n                        window.location.reload(true);\r\n                    }, 1000);\r\n                });\r\n            } else {\r\n                installNextExtension();\r\n            }\r\n    }\r\n\r\n    function styleTables(){\r\n            // Clean all to make this function able to \"restyle\" after\r\n            // data refresh.\r\n            $('#Extensions_manager table tr').removeClass('extensionOdd')\r\n                                                                             .removeClass('extensionEven');\r\n\r\n            $('#Extensions_manager table tr:nth-child(even)').addClass('extensionEven');\r\n            $('#Extensions_manager table tr:nth-child(odd)').addClass('extensionOdd');\r\n    }\r\n\r\n    function noAvailableExtensions(){\r\n            var $noAvailableExtElement = $('<div/>');\r\n            $noAvailableExtElement.attr('id', 'noExtensions')\r\n                                                      .addClass('ui-state-highlight')\r\n                                                      .text(__('No extensions available.'));\r\n\r\n            $('#available-extensions-container').empty().append($noAvailableExtElement);\r\n    }\r\n    \r\n    return {\r\n        start : function(){\r\n            \r\n            // Table styling.\r\n            styleTables();\r\n\r\n            $('#installProgress').hide();\r\n\r\n            //Detect wich extension is already installed\r\n            $('#extensions-manager-container .ext-id').each(function() {\r\n                    var ext = $(this).text();\r\n                    ext_installed.push(ext);\r\n                    $('.ext-id.ext-' + ext).addClass('installed');\r\n            });\r\n\r\n            $('#available-extensions-container tr input').click(function(event){\r\n                    event.stopPropagation();\r\n            });\r\n\r\n            $('#available-extensions-container tr input:checkbox').click(function() {\r\n                    var $installButton = $('#installButton');\r\n                    if ($(this).parent().parent().parent().find('input:checkbox:checked').length > 0){\r\n                            $installButton.attr('disabled', false);\r\n                    }\r\n                    else{\r\n                            $installButton.attr('disabled', true);\r\n                    }\r\n            });\r\n\r\n            $('#available-extensions-container #installButton').click(function(event) {\r\n                    //Prepare the list of extension to install in the order of dependency\r\n                    toInstall = [];\r\n                    $('#available-extensions-container input:checked').each(function() {\r\n                            var ext = $(this).prop('name').split('_')[1];\r\n                            var deps = getDependencies(ext);\r\n                            if (deps.length) {\r\n                                toInstall = toInstall.concat(deps);\r\n                            }\r\n                            toInstall.push(ext);\r\n                    });\r\n                    toInstall = getUnique(toInstall);\r\n                    if (!toInstall.length) {\r\n                            window.alert(__('Nothing to install !'));\r\n                            return false;\r\n                    }\r\n                    //Let's go\r\n                    percentByExt = 100 / toInstall.length;\r\n\r\n                    //Show the dialog with the result\r\n                    $('#installProgress p.status').text(__('%s extension(s) to install.').replace('%s', toInstall.length));\r\n                    $('#installProgress .bar').width(0);\r\n                    $('#installProgress .console').empty();\r\n                    progressConsole(__('Do you wish to install the following extension(s):\\n%s?').replace('%s', toInstall.join(', ')));\r\n                    $('#installProgress').dialog({\r\n                            modal: true,\r\n                            width: 400,\r\n                            height: 300,\r\n                            buttons: [{\r\n                                text: __('No'),\r\n                                click: function() {\r\n                                        $(this).dialog('close');\r\n                                }\r\n                            },{\r\n                                    text: __('Yes'),\r\n                                    click: function() {\r\n                                            //Run the install one by one\r\n                                            progressConsole(__('Preparing installation...'));\r\n                                            $('.ui-dialog-buttonpane').remove();\r\n                                            installError = 0;\r\n                                            indexCurrentToInstall = 0;\r\n                                            installNextExtension();\r\n                                    }\r\n                                }]\r\n                    });\r\n                    event.preventDefault();\r\n            });\r\n        }\r\n    };\r\n\r\n});\r\n\n","/**\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('controller/users/add',['jquery', 'module', 'helpers', 'users'], function($, module, helpers, users) {\r\n    'use strict';\r\n       \r\n    \r\n    /**\r\n     * The user add controller\r\n     * @exports controller/users/add\r\n     */    \r\n    return {\r\n        start : function(){\r\n            var conf = module.config();\r\n            var url  = helpers._url('checkLogin', 'Users', 'tao');\r\n            users.checkLogin(conf.loginId, url);\r\n            \r\n            if(conf.exit === true){\r\n\r\n                setTimeout(function(){\r\n                    //TODO would be better to clean up the form and switch the section\r\n                    window.location = helpers._url('index', 'Main', 'tao', {structure: 'users', ext : 'tao', section : 'list_users'});\r\n                }, 1000);\r\n            }\r\n        }\r\n    };\r\n});\r\n\n","/**\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('controller/users/disable-edit',['layout/section'], function(section) {\r\n    'use strict';\r\n       \r\n    /**\r\n     * Ensure edit section is disabled\r\n     * @exports controller/users/disable-edit\r\n     */    \r\n    return {\r\n        start : function(){\r\n            section.get('edit_user').disable();\r\n        }\r\n    };\r\n});\r\n\n","/**\r\n * @author Jérôme Bogaert <jerome@taotesting.com>\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('controller/users/index',['module', 'jquery', 'i18n', 'util/url', 'layout/section', 'ui/feedback', 'ui/dialog/confirm', 'ui/datatable'], function (module, $, __, urlHelper, section, feedback, dialogConfirm) {\r\n    'use strict';\r\n\r\n    var runUserAction = function runUserAction(uri, action, confirmMessage) {\r\n        var tokenName = module.config().xsrfTokenName;\r\n        var data = {};\r\n\r\n        data.uri = uri;\r\n        data[tokenName] = $.cookie(tokenName);\r\n\r\n        dialogConfirm(confirmMessage, function () {\r\n            $.ajax({\r\n                url: urlHelper.route(action, 'Users', 'tao'),\r\n                data: data,\r\n                type: 'POST'\r\n            }).done(function(response) {\r\n                if (response.success) {\r\n                    feedback().success(response.message);\r\n                } else {\r\n                    feedback().error(response.message);\r\n                }\r\n                $('#user-list').datatable('refresh');\r\n            });\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Edit a user (shows the edit section)\r\n     * @param {String} uri - the user uri\r\n     */\r\n    var editUser = function editUser(uri) {\r\n        section\r\n            .get('edit_user')\r\n            .enable()\r\n            .loadContentBlock(urlHelper.route('edit', 'Users', 'tao'), {uri : uri})\r\n            .show();\r\n    };\r\n\r\n    /**\r\n     * Removes a user\r\n     * @param {String} uri - the user uri\r\n     * @param row\r\n     */\r\n    var removeUser = function removeUser(uri, row) {\r\n        runUserAction(uri, 'delete', __('Please confirm deletion of user %s', row.login));\r\n    };\r\n\r\n    /**\r\n     * Locks a user\r\n     * @param {String} uri - the user uri\r\n     * @param row\r\n     */\r\n    var lockUser = function lockUser(uri, row) {\r\n        runUserAction(uri, 'lock', __('Please confirm locking of account %s', row.login));\r\n    };\r\n\r\n    /**\r\n     * Unlocks blocked user\r\n     * @param {String} uri - the user uri\r\n     * @param row\r\n     */\r\n    var unlockUser = function unlockUser(uri, row) {\r\n        runUserAction(uri, 'unlock', __('Please confirm unlocking of account %s', row.login));\r\n    };\r\n\r\n    /**\r\n     * The user index controller\r\n     * @exports controller/users/index\r\n     */\r\n    return {\r\n        start : function(){\r\n            var $userList = $('#user-list');\r\n\r\n            section.on('show', function (section) {\r\n                if (section.id === 'list_users') {\r\n                    $userList.datatable('refresh');\r\n                }\r\n            });\r\n\r\n            var actions = {\r\n                edit: editUser,\r\n                remove: removeUser,\r\n                lock: lockUser,\r\n                unlock: unlockUser\r\n            };\r\n\r\n            // initialize the user manager component\r\n            $userList.on('load.datatable', function (e, dataset) {\r\n                _.forEach(dataset.data, function(row) {\r\n                    var lockBtn = '[data-item-identifier=\"' + row.id + '\"] button.lock';\r\n                    var unlockBtn = '[data-item-identifier=\"' + row.id + '\"] button.unlock';\r\n                    if (row.lockable) {\r\n                        $(row.locked ? lockBtn : unlockBtn, $userList).hide();\r\n                    } else {\r\n                        _.forEach([lockBtn, unlockBtn], function (btn) {\r\n                            $(btn, $userList).hide();\r\n                        });\r\n                    }\r\n                });\r\n            }).datatable({\r\n                url: urlHelper.route('data', 'Users', 'tao'),\r\n                paginationStrategyBottom: 'pages',\r\n                filter: true,\r\n                actions: actions,\r\n                model: [\r\n                    {\r\n                        id : 'login',\r\n                        label : __('Login'),\r\n                        sortable : true\r\n                    },{\r\n                        id : 'firstname',\r\n                        label : __('First Name'),\r\n                        sortable : true\r\n                    },{\r\n                        id : 'lastname',\r\n                        label : __('Last Name'),\r\n                        sortable : true\r\n                    },{\r\n                        id : 'email',\r\n                        label : __('Email'),\r\n                        sortable : true\r\n                    },{\r\n                        id : 'roles',\r\n                        label : __('Roles'),\r\n                        sortable : false\r\n                    },{\r\n                        id : 'dataLg',\r\n                        label : __('Data Language'),\r\n                        sortable : true,\r\n                        visible : $userList.data('user-data-lang-enabled')\r\n                    },{\r\n                        id: 'guiLg',\r\n                        label : __('Interface Language'),\r\n                        sortable : true\r\n                    }, {\r\n                        id: 'status',\r\n                        label: __('Account status'),\r\n                        sortable: true,\r\n                        transform: function (value) {\r\n                            var icon = value === 'enabled'\r\n                                ? 'result-ok'\r\n                                : 'lock';\r\n                            return '<span class=\"icon-' + icon + '\"></span> ' + value;\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    };\r\n});\r\n\n"]}