/* Style for the calculator component */

/* font size mixin specific to calculator to use em instead of rem unit */
@function calc-em-size($em) {
    @return ($em) * 1em;
}
@mixin calc-font-size($em) {
    font-size: calc-em-size($em) !important;
}

.dynamic-component-container {
    .calcContainer {
        width: 100%;
        height: 100%;
        background: none;
        border: none;
        bottom: auto;
        clear: none;
        color: $textColor;
        display: block;
        float: none;
        font-family: sans-serif;
        left: auto;
        line-height: normal;
        margin: 0;
        max-height: none;
        max-width: none;
        min-height: 0;
        min-width: 0;
        overflow: visible;
        padding: 0;
        position: static;
        right: auto;
        text-align: left;
        text-decoration: none;
        top: auto;
        visibility: visible;
        &:after {
            clear: both;
            content: ".";
            display: block;
            height: 0;
            visibility: hidden;
        }
        form {
            height: 100%;
            width: 100%;
            /*
            * the font-size of the parent element of the calculator will serve as the reference for the children.
            * the children must use em unit for font-sizing to ensure proportional increase when resized.
            */
            font-size: 10px;
            input, button {
                background-color: $uiClickableDefaultBg;
                border-radius: 0;
                padding: 0;
                border: none;
                color: $textColor !important;
                float: left;
                height: 14%;
                text-align: center;
                text-shadow: none;
                width: 25%;
                min-width: 0;
                cursor: pointer;
                &.div-1{
                    width: 100%;
                }
                &.div-2{
                    width: 50%;
                }
                &.div-3{
                    width: 33.33%;
                }
                &.div-4{
                    width: 25%;
                }
                &.div-5{
                    width: 20%;
                }
                &.calcFirst {
                    clear: left;
                }
                &.calcClear {
                    color: $info !important;
                    @include calc-font-size(1.8);
                }
                &.calcFunction {
                    @include calc-font-size(1.8);
                    sup {
                        top: -0.5em;
                        padding-right: 1px;
                        @include calc-font-size(0.8);
                    }
                    sub {
                        padding-left: 1px;
                        @include calc-font-size(1.0);
                    }
                    &.calcDivision, &.calcMultiplication, &.calcSubtraction, &.calcSum{
                        @include calc-font-size(2.2);
                    }
                }
                &.calcDisplay {
                    cursor: text;
                    opacity: 1 !important;
                    background: whiten($uiClickableDefaultBg, .7);
                    &:hover {
                        background: whiten($uiClickableDefaultBg, .9);
                    }
                    font-family: monospace;
                    text-align: right;
                    width: 100%;
                    max-width: none;
                    padding: 0 0.2em;
                    height: 16%;
                    font-size: 2.8em;
                }
                &.calcInput {
                    font-weight: bold;
                    @include calc-font-size(1.8);
                }
                &.calcSubmit {
                    font-weight: bold;
                    color: $textColor !important;
                    background-color: #ddd;
                    text-shadow: none;
                    line-height: normal;
                }
                &:hover {
                    background: $uiClickableActiveBg;
                }
                &.triggered {
                    background: whiten($uiClickableHoverBg, .2);
                }
            }
        }
    }
}

.calculator {
    $calculatorPanelBg: $uiClickableDefaultBg;
    $calculatorPanelTxt: $textColor;
    $calculatorKeyboardBg: $uiClickableDefaultBg;
    $calculatorKeyboardHoverBg: $uiClickableActiveBg;
    $calculatorKeyboardSpecialBg: $uiClickableHoverBg;
    $calculatorKeyboardSpecialTxt: $textHighlight;
    $calculatorKeyboardCommandTxt: $info;
    $calculatorKeyboardTxt: $textColor;
    $calculatorScreenBg: $uiGeneralContentBg;
    $calculatorScreenTxt: $textColor;
    $calculatorScreenSpecialTxt: $uiClickableHoverBg;
    $calculatorHistoryBorder: $uiGeneralContentBorder;
    $calculatorHistoryTxt: whiten($textColor, .2);

    $calculatorFontSizeBtnPrimary: 1.8;
    $calculatorFontSizeBtnSecondary: 1.4;
    $calculatorFontSizeBtnSvg: 1;
    $calculatorFontSizeExpression: 1.3;
    $calculatorFontSizeHistory: 1;
    $calculatorLineHeightExpression: calc-em-size($calculatorFontSizeExpression + .3);
    $calculatorLineHeightHistory: calc-em-size($calculatorFontSizeHistory + .3);
    $calculatorTermSpace: calc-em-size(.2);
    $calculatorButtonSize: calc-em-size(4);
    $calculatorButtonPadding: 2px;
    $calculatorScreenPadding: 2px;
    $calculatorBaseFontSize: 10px;

    position: relative;
    font-family: sans-serif;
    font-size: $calculatorBaseFontSize;
    width: 100%;

    .calculator-keyboard {
        position: relative;
        display: flex;
        flex-direction: column;
        background: $calculatorKeyboardBg;
        color: $calculatorKeyboardTxt;
        width: 100%;
        padding-top: $calculatorScreenPadding;

        .row {
            position: relative;
            display: flex;
            flex-direction: row;
            justify-content: space-evenly;
            width: 100%;
        }

        button {
            position: relative;
            background-color: $calculatorKeyboardBg;
            color: $calculatorKeyboardTxt !important;
            display: inline-block;
            border-radius: 0;
            border: none;
            padding: 0;
            text-align: center;
            text-shadow: none;
            cursor: pointer;
            flex: 1 1 auto;
            width: $calculatorButtonSize;
            height: $calculatorButtonSize;

            @include calc-font-size(1);

            span {
                position: relative;
                z-index: 1;
            }

            &:before {
                content: " ";
                border-radius: 50%;
                display: inline-block;
                position: absolute;
                z-index: 0;
                top: calc(50% - #{$calculatorButtonSize / 2} + #{$calculatorButtonPadding});
                left: calc(50% - #{$calculatorButtonSize / 2} + #{$calculatorButtonPadding});
                width: calc(#{$calculatorButtonSize} - #{$calculatorButtonPadding * 2});
                height: calc(#{$calculatorButtonSize} - #{$calculatorButtonPadding * 2});
            }

            &:hover {
                &:before {
                    background: $calculatorKeyboardHoverBg;
                }
            }
            &.operand {
                span {
                    font-weight: bold;
                    @include calc-font-size($calculatorFontSizeBtnPrimary);
                }
            }
            &.operator {
                span {
                    @include calc-font-size($calculatorFontSizeBtnSecondary);
                }
            }
            &.command {
                span {
                    color: $calculatorKeyboardCommandTxt !important;
                    @include calc-font-size($calculatorFontSizeBtnSecondary);
                }
            }
            &.execute {
                &:before {
                    background: $calculatorKeyboardSpecialBg;
                }

                span {
                    font-weight: bold;
                    color: $calculatorKeyboardSpecialTxt !important;
                    @include calc-font-size($calculatorFontSizeBtnPrimary);
                }
            }

            svg {
                display: inline-block;
                width: calc-em-size($calculatorFontSizeBtnSvg);
                height: calc-em-size($calculatorFontSizeBtnSvg);
                stroke-width: 0;
                stroke: currentColor;
                fill: currentColor;

                &.backspace-outline {
                    width: calc-em-size($calculatorFontSizeBtnSvg * 1.2);
                    height: calc-em-size($calculatorFontSizeBtnSvg * 1.2);
                }
            }
        }
    }

    .simple-screen {
        position: relative;
        width: 100%;
        @include calc-font-size($calculatorFontSizeExpression);
        color: $calculatorScreenTxt;
        font-family: monospace;

        .screen {
            position: relative;
            width: 100%;
            overflow: auto;
            word-break: break-all;
            text-align: left;
            padding: $calculatorScreenPadding 8px;
        }

        .history {
            @include calc-font-size($calculatorFontSizeHistory);
            border: 1px solid $calculatorHistoryBorder;
            color: $calculatorHistoryTxt;
            height: calc(#{$calculatorScreenPadding * 2} + #{$calculatorLineHeightHistory * 3});
            line-height: $calculatorLineHeightHistory;

            .history-line {
                .history-expression {
                    font-weight: lighter;
                    text-align: left;
                }
                .history-result {
                    &:before {
                        content: "=";
                        display: inline-block;
                        font-weight: lighter;
                        padding-right: $calculatorTermSpace;
                    }
                    text-align: right;
                    font-weight: bolder;
                }
            }
        }
        .expression {
            @include calc-font-size($calculatorFontSizeExpression);
            background: $calculatorScreenBg;
            color: $calculatorScreenTxt;
            height: calc(#{$calculatorScreenPadding * 2} + #{$calculatorLineHeightExpression * 2});
            line-height: $calculatorLineHeightExpression;
        }
        .term {
            padding: 0;

            &.term-operator:not([data-token="POW"]) {
                padding: 0 $calculatorTermSpace;
            }
            &.term-function:not([data-token="SQRT"]):not([data-token="CBRT"]) {
                padding-right: $calculatorTermSpace;
            }
            &.term-operand {
                font-weight: bold;
            }
            &.term-modificator {
                font-weight: lighter;
            }
            &.term-constant {
                font-style: italic;
                font-weight: bold;
            }
            &.term-variable {
                font-weight: bold;
                color: $calculatorScreenSpecialTxt;
            }
            &.term-unknown {
                color: $warning;
                text-decoration: underline wavy $error;
            }
            &.term-error {
                color: $error;
            }
        }
    }

    &.error .screen {
        background: $errorBgColor;
    }
}
