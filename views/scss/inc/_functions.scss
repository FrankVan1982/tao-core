@mixin grid-unit($span, $numCols: 12, $gutter: 0) {
    $gridPx: 840;
    $rawSpanPx: (($gridPx - ($numCols * $gutter)) / $numCols);
    $spanPx: $rawSpanPx * $span + (($span - 1) * $gutter);
    $spanPercent: widthPerc($spanPx, $gridPx);
    $marginPercent: widthPerc($gutter, $gridPx);
    margin-left: $marginPercent;
    width: $spanPercent;
}

@mixin box-shadow($horiz: 1px, $vert: 1px, $blur: 2px, $spread: 0, $color: rgba(0, 0, 0, .2)) {
    -webkit-box-shadow: $horiz $vert $blur $spread $color;
    -moz-box-shadow: $horiz $vert $blur $spread $color;
    box-shadow: $horiz $vert $blur $spread $color;
}

@mixin simple-border($color: #ddd) {
    border: 1px solid $color;
    border-radius: 2px;
    -webkit-border-radius: 2px;
}

@mixin border-radius($radius: 2) {
    -moz-border-radius: $radius * 1px;
    -webkit-border-radius: $radius * 1px;
    border-radius: $radius * 1px;
}

@mixin border-radius-top($radius: 2) {
    -webkit-border-top-left-radius: $radius * 1px;
    -webkit-border-top-right-radius: $radius * 1px;
    -moz-border-radius-topleft: $radius * 1px;
    -moz-border-radius-topright: $radius * 1px;
    border-top-left-radius: $radius * 1px;
    border-top-right-radius: $radius * 1px;
}

@mixin border-radius-bottom($radius: 2) {
    -webkit-border-bottom-right-radius: $radius * 1px;
    -webkit-border-bottom-left-radius: $radius * 1px;
    -moz-border-radius-bottomright: $radius * 1px;
    -moz-border-radius-bottomleft: $radius * 1px;
    border-bottom-right-radius: $radius * 1px;
    border-bottom-left-radius: $radius * 1px;
}

@mixin border-radius-left($radius: 2) {
    -webkit-border-top-left-radius: $radius * 1px;
    -webkit-border-bottom-left-radius: $radius * 1px;
    -moz-border-radius-topleft: $radius * 1px;
    -moz-border-radius-bottomleft: $radius * 1px;
    border-top-left-radius: $radius * 1px;
    border-bottom-left-radius: $radius * 1px;
}

@mixin border-radius-right($radius: 2) {
    -webkit-border-top-right-radius: $radius * 1px;
    -webkit-border-bottom-right-radius: $radius * 1px;
    -moz-border-radius-topright: $radius * 1px;
    -moz-border-radius-bottomright: $radius * 1px;
    border-top-right-radius: $radius * 1px;
    border-bottom-right-radius: $radius * 1px;
}

@mixin border-box() {
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}

@function whiten($color, $white: 0.3) {
    @return mix(#fff, $color, ($white * 100) * 1%);
}

@function blacken($color, $black: 0.3) {
    @return mix(#000, $color, ($black * 100) * 1%);
}

@function widthPerc($colWidth, $context) {
    @return ($colWidth * 100 / $context) * 1%
}

@function remDist($fontSizePx) {
    @return ($fontSizePx / 10) * 1rem
}

@function black($alpha: 1) {
    @return (rgba(0, 0, 0, $alpha))
}

@function white($alpha: 1) {
    @return (rgba(255, 255, 255, $alpha))
}

@mixin font-size($remPx) {
    font-size: ($remPx) * 1px;
    font-size: ($remPx / 10) * 1rem;
}

@mixin linear-gradient($angle, $colorStops...) {
    $angleWidthVendorPrefix: "";
    $angle: "";
    @if $angle == "to top" or $angle == "bottom" {
        $angleWidthVendorPrefix: bottom;
        $angle: to top;
    } @else if $angle == "to right" or $angle == "left" {
        $angleWidthVendorPrefix: left;
        $angle: to right;
    } @else if $angle == "to bottom" or $angle == "top" {
        $angleWidthVendorPrefix: top;
        $angle: to bottom;
    } @else if $angle == "to left" or $angle == "right" {
        $angleWidthVendorPrefix: right;
        $angle: to left;
    } @else if $angle == "to top right" or $angle == "bottom left" {
        $angleWidthVendorPrefix: bottom left;
        $angle: to top right;
    } @else if $angle == "to bottom right" or $angle == "top left" {
        $angleWidthVendorPrefix: top left;
        $angle: to bottom right;
    } @else if $angle == "to bottom left" or $angle == "top right" {
        $angleWidthVendorPrefix: top right;
        $angle: to bottom left;
    } @else if $angle == "to top left" or $angle == "bottom right" {
        $angleWidthVendorPrefix: bottom right;
        $angle: to top left;
    } @else {
        $angleWidthVendorPrefix: $angle % 360;
        $angle: (90 - $angle) % 360;
    }
    background: -webkit-linear-gradient($angleWidthVendorPrefix, $colorStops);
    background: -moz-linear-gradient($angleWidthVendorPrefix, $colorStops);
    background: -o-linear-gradient($angleWidthVendorPrefix, $colorStops);
    background: linear-gradient($angle, $colorStops);
}

/**
 * Use icon within sass: @inclue icon('down');
 */
@mixin icon($name, $namespace: 'icon') {
    font-family: 'tao';
    @extend .#{$namespace}-#{$name}:before;
    display: inline-block;
}
